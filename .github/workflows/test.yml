name: CI

# Run on push only for master, if not it will trigger push & pull_request on PRs at the same time
on:
  push:
    branches:
      - master
    paths-ignore:
      # Any update here needs to be done for 
      # - `pull_request` see below
      # - https://github.com/prisma/prisma/blob/master/src/.buildkite/test/buildkite-entry.sh
      # - https://github.com/prisma/prisma/blob/master/src/.buildkite/publish/buildkite-entry.sh
      - "*.md"
      - ".vscode/**"
      - "docs/**"
      - "examples/**"
      - "LICENSE"
      - "src/.buildkite/**"
      - "src/.dockerignore"
      - "src/scripts/ci/publish.ts"
      - "src/graphs/**"
  pull_request:
   paths-ignore:
      # Any update here needs to be done for 
      # - `push`see before
      # - https://github.com/prisma/prisma/blob/master/src/.buildkite/test/buildkite-entry.sh
      # - https://github.com/prisma/prisma/blob/master/src/.buildkite/publish/buildkite-entry.sh
      - "*.md"
      - ".vscode/**"
      - "docs/**"
      - "examples/**"
      - "LICENSE"
      - "src/.buildkite/**"
      - "src/.dockerignore"
      - "src/scripts/ci/publish.ts"
      - "src/graphs/**"

env:
  PRISMA_TELEMETRY_INFORMATION: "prisma test.yml"
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

jobs:
  #
  # TESTS-INTEGRATION
  #
  tests-integration:
    timeout-minutes: 20
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        database:
          - postgres
          - mysql
          - mariadb
          - mssql 
        node: [12]

    steps:
      - uses: actions/checkout@v2

      - run: docker-compose -f src/docker/docker-compose.yml up --detach ${{matrix.database}}
        if: matrix.database != 'sqlite'
          
      # From https://docs.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - run: bash .github/workflows/setup.sh
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - run: pnpm i sqlite3@5.0.0 --unsafe-perm --reporter=silent
        if: ${{ matrix.database == 'sqlite' }}
        working-directory: src/packages/tests

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - run: pnpm run jest integration/${{ matrix.database }} -- --forceExit --maxConcurrency=8
        working-directory: src/packages/tests
        env:
          CI: true
          SKIP_GIT: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          TEST_POSTGRES_BASE_URI: postgres://prisma:prisma@127.0.0.1:5432
          TEST_MYSQL_BASE_URI: mysql://root:root@127.0.0.1:3306
          TEST_MARIADB_BASE_URI: mysql://root:root@127.0.0.1:4306
          TEST_POSTGRES_URI: postgres://prisma:prisma@127.0.0.1:5432/tests
          TEST_MYSQL_URI: mysql://root:root@127.0.0.1:3306/tests
          TEST_MARIADB_URI: mysql://root:root@127.0.0.1:4306/tests
          TEST_MSSQL_URI: mssql://SA:Pr1sm4_Pr1sm4@127.0.0.1:1433/master
